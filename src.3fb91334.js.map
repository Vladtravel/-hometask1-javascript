{"version":3,"sources":["notes.json","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/index.js","index.js"],"names":["module","exports","id","icon","name","category","created","dates","isActive","shortid","require","editNoteId","taskActiveEl","taskArchiivedEl","randomeActiveEl","randomeArchiivedEl","ideaActiveEl","ideaArchiivedEl","quoteActiveEl","quoteArchiivedEl","on","activeNotes","archivedNotes","sortNotesByStatus","notes","map","el","push","refs","tbodyEl","document","querySelector","form","createBtn","modal","categoryEl","addEventListener","onFormSubmit","onCreateClick","onFormClick","window","onClick","notesMarkup","notesMarkupEl","sortByCategories","notesArr","uniq","filter","item","index","arr","indexOf","forEach","innerHTML","categoryNotesMarkupEl","insertAdjacentHTML","e","preventDefault","generate","target","value","Date","toLocaleDateString","—Åontent","split","reverse","join","getElementById","newNotesMarkup","classList","remove","data","noteName","cart","head","lamp","quotes","pencil","archive","bin","add","alt","onEditNote","onArchiveNote","parentElement","onRemoveNote","toString","children","textContent","className","splice","archivedNotesMarkupEl","findIndex","delNotes","onCloseModal","onArchiveRender","onActiveRender","activeEl","archivedEl","length"],"mappings":";;;;;;;;;;;;;;;;;AAAAA,OAAOC,QAAQ,CAAC,CAACC,GAAG,IAAIC,KAAK,mBAAmBC,KAAK,gBAAgBC,SAAS,OAAOC,QAAQ,mBAA6B,UAAA,kBAAkBC,MAAM,GAAGC,SAAS,QAAQ,CAACN,GAAG,IAAIC,KAAK,qBAAqBC,KAAK,0BAA0BC,SAAS,iBAAiBC,QAAQ,mBAA6B,UAAA,mBAAmBC,MAAM,CAAC,yBAAyBC,SAAS,QAAQ,CAACN,GAAG,IAAIC,KAAK,oBAAoBC,KAAK,cAAcC,SAAS,OAAOC,QAAQ,mBAA6B,UAAA,gBAAgBC,MAAM,GAAGC,SAAS,QAAQ,CAACN,GAAG,IAAIC,KAAK,oBAAoBC,KAAK,iBAAiBC,SAAS,QAAQC,QAAQ,mBAA6B,UAAA,sBAAsBC,MAAM,GAAGC,SAAS,QAAQ,CAACN,GAAG,IAAIC,KAAK,oBAAoBC,KAAK,iBAAiBC,SAAS,QAAQC,QAAQ,mBAA6B,UAAA,sBAAsBC,MAAM,GAAGC,SAAS,SAAS,CAACN,GAAG,IAAIC,KAAK,oBAAoBC,KAAK,iBAAiBC,SAAS,QAAQC,QAAQ,mBAA6B,UAAA,sBAAsBC,MAAM,GAAGC,SAAS;;ACA78B,aAKA,IAAA,EAAA,EAOA,SAAA,IAEA,OADA,GAAA,KAAA,EAAA,OAAA,QACA,OAGA,SAAA,EAAA,GACA,EAAA,EAGA,OAAA,QAAA,CACA,UAAA,EACA,KAAA;;ACvBA,aAEA,IAGA,EACA,EAEA,EANA,EAAA,QAAA,6BAEA,EAAA,mEAMA,SAAA,IACA,GAAA,EAGA,SAAA,EAAA,GACA,GAAA,GAQA,GAAA,IAAA,EAAA,CAIA,GAAA,EAAA,SAAA,EAAA,OACA,MAAA,IAAA,MAAA,uCAAA,EAAA,OAAA,qCAAA,EAAA,OAAA,gBAAA,GAGA,IAAA,EAAA,EAAA,MAAA,IAAA,OAAA,SAAA,EAAA,EAAA,GACA,OAAA,IAAA,EAAA,YAAA,KAGA,GAAA,EAAA,OACA,MAAA,IAAA,MAAA,uCAAA,EAAA,OAAA,yDAAA,EAAA,KAAA,OAGA,EAAA,EACA,UAxBA,IAAA,IACA,EAAA,EACA,KAyBA,SAAA,EAAA,GAEA,OADA,EAAA,GACA,EAGA,SAAA,EAAA,GACA,EAAA,KAAA,GACA,IAAA,IACA,IACA,EAAA,GAIA,SAAA,IACA,GACA,EAAA,GAQA,IALA,IAGA,EAHA,EAAA,EAAA,MAAA,IACA,EAAA,GACA,EAAA,EAAA,YAGA,EAAA,OAAA,GACA,EAAA,EAAA,YACA,EAAA,KAAA,MAAA,EAAA,EAAA,QACA,EAAA,KAAA,EAAA,OAAA,EAAA,GAAA,IAEA,OAAA,EAAA,KAAA,IAGA,SAAA,IACA,OAAA,IAGA,EAAA,KASA,SAAA,EAAA,GAEA,OADA,IACA,GAGA,SAAA,IACA,OAAA,GAAA,EAGA,OAAA,QAAA,CACA,IAAA,EACA,WAAA,EACA,KAAA,EACA,OAAA,EACA,SAAA;;ACrGA,aAEA,IAEA,EAFA,EAAA,iBAAA,SAAA,OAAA,QAAA,OAAA,UAaA,EATA,GAAA,EAAA,gBASA,SAAA,GACA,OAAA,EAAA,gBAAA,IAAA,WAAA,KATA,SAAA,GAEA,IADA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,KAAA,KAAA,MAAA,IAAA,KAAA,WAEA,OAAA,GAQA,OAAA,QAAA;;ACjBA,OAAA,QAAA,SAAA,EAAA,EAAA,GAwBA,IAlBA,IAAA,GAAA,GAAA,KAAA,IAAA,EAAA,OAAA,GAAA,KAAA,KAAA,EAeA,KAAA,IAAA,EAAA,EAAA,EAAA,QACA,EAAA,KAMA,IAHA,IAAA,EAAA,EAAA,GAEA,EAAA,EACA,KAKA,IAFA,GAAA,EAAA,EAAA,GAAA,IAAA,IAEA,UAAA,EAAA,OAAA;;ACpCA,aAEA,IAAA,EAAA,QAAA,cACA,EAAA,QAAA,wBACA,EAAA,QAAA,iBAEA,SAAA,EAAA,GAMA,IALA,IACA,EADA,EAAA,EAGA,EAAA,IAEA,GACA,GAAA,EAAA,EAAA,EAAA,MAAA,GACA,EAAA,EAAA,KAAA,IAAA,GAAA,EAAA,GACA,IAEA,OAAA,EAGA,OAAA,QAAA;;ACpBA,aAEA,IAaA,EAGA,EAhBA,EAAA,QAAA,cACA,EAAA,QAAA,cAKA,EAAA,cAIA,EAAA,EAYA,SAAA,EAAA,GACA,IAAA,EAAA,GAEA,EAAA,KAAA,MAAA,MAAA,KAAA,MAAA,IAeA,OAbA,IAAA,EACA,KAEA,EAAA,EACA,EAAA,GAGA,GAAA,EAAA,GACA,GAAA,EAAA,GACA,EAAA,IACA,GAAA,EAAA,IAEA,GAAA,EAAA,GAIA,OAAA,QAAA;;AC7CA,aACA,IAAA,EAAA,QAAA,cAEA,SAAA,EAAA,GACA,SAAA,GAAA,iBAAA,GAAA,EAAA,OAAA,KAIA,IAAA,OAAA,KACA,EAAA,MAAA,QAAA,uBAAA,QACA,KACA,KAAA,GAGA,OAAA,QAAA;;ACdA,aAEA,OAAA,QAAA;;ACFA,aAEA,IAAA,EAAA,QAAA,cACA,EAAA,QAAA,WACA,EAAA,QAAA,cAMA,EAAA,QAAA,6BAAA,EAQA,SAAA,EAAA,GAEA,OADA,EAAA,KAAA,GACA,OAAA,QASA,SAAA,EAAA,GAEA,OADA,EAAA,EACA,OAAA,QAQA,SAAA,EAAA,GAKA,YAJA,IAAA,GACA,EAAA,WAAA,GAGA,EAAA,WAOA,SAAA,IACA,OAAA,EAAA,GAIA,OAAA,QAAA,EACA,OAAA,QAAA,SAAA,EACA,OAAA,QAAA,KAAA,EACA,OAAA,QAAA,OAAA,EACA,OAAA,QAAA,WAAA,EACA,OAAA,QAAA,QAAA;;AC7DA,aACA,OAAA,QAAA,QAAA;;AC0YC,aA3YD,QAAA,oBACA,IAAA,EAAA,EAAA,QAAA,sBACA,EAAA,EAAA,QAAA,sBACA,EAAA,EAAA,QAAA,sBACA,EAAA,EAAA,QAAA,wBACA,EAAA,EAAA,QAAA,wBACA,EAAA,EAAA,QAAA,yBACA,EAAA,EAAA,QAAA,qBAEA,EAAA,EAAA,QAAA,iBAkYC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAjYD,MAAMC,EAAUC,QAAQ,WAExB,IAAIC,EACAC,EAAe,GACfC,EAAkB,GAClBC,EAAkB,GAClBC,EAAqB,GACrBC,EAAe,GACfC,EAAkB,GAClBC,EAAgB,GAChBC,EAAmB,GACnBC,EAAK,OAET,MAAMC,EAAc,GACdC,EAAgB,GAItB,SAASC,EAAkBC,GACzBA,EAAMC,IAAIC,IACY,SAAhBA,EAAGlB,SACLa,EAAYM,KAAKD,GAEjBJ,EAAcK,KAAKD,KAPzBH,EAAkBC,EAAD,SAYjB,MAAMI,EAAO,CACXC,QAASC,SAASC,cAAc,SAChCC,KAAMF,SAASC,cAAc,QAC7BE,UAAWH,SAASC,cAAc,cAClCG,MAAOJ,SAASC,cAAc,aAC9BI,WAAYL,SAASC,cAAc,gBAGrCH,EAAKI,KAAKI,iBAAiB,SAAUC,GACrCT,EAAKK,UAAUG,iBAAiB,QAASE,GACzCV,EAAKC,QAAQO,iBAAiB,QAASG,GACvCC,OAAOJ,iBAAiB,QAASK,GAEjC,MAAMC,EAAcC,EAActB,GAIlC,SAASuB,EAAiBvB,EAAaC,GAC/BuB,MACAC,EADW,IAAIzB,KAAgBC,GAElCG,IAAIC,GAAMA,EAAGrB,UACb0C,OAAO,CAACC,EAAMC,EAAOC,IACbA,EAAIC,QAAQH,KAAUC,GAGjC5B,EAAY+B,QAAQ1B,IACVA,OAAAA,EAAGrB,UACJ,IAAA,OACHO,EAAae,KAAKD,GAClB,MACG,IAAA,iBACHZ,EAAgBa,KAAKD,GACrB,MACG,IAAA,OACHV,EAAaW,KAAKD,GAClB,MACG,IAAA,QACHR,EAAcS,KAAKD,MAOzBJ,EAAc8B,QAAQ1B,IACZA,OAAAA,EAAGrB,UACJ,IAAA,OACHQ,EAAgBc,KAAKD,GACrB,MACG,IAAA,iBACHX,EAAmBY,KAAKD,GACxB,MACG,IAAA,OACHT,EAAgBU,KAAKD,GACrB,MACG,IAAA,QACHP,EAAiBQ,KAAKD,MAO5BE,EAAKO,WAAWkB,UAAY,GACtBX,MAAAA,EAAcY,EAAsBR,GAC1ClB,EAAKO,WAAWoB,mBAAmB,YAAab,GAGlD,SAASL,EAAamB,GACpBA,EAAEC,iBAEF7C,EAAe,GACfC,EAAkB,GAClBC,EAAkB,GAClBC,EAAqB,GACrBC,EAAe,GACfC,EAAkB,GAClBC,EAAgB,GAChBC,EAAmB,GAEdR,GACHU,EAAYM,KAAK,CACfzB,GAAIO,EAAQiD,WACZtD,KAAMoD,EAAEG,OAAO,GAAGC,MAClBvD,SAAUmD,EAAEG,OAAO,GAAGC,MACtBtD,SAAS,IAAIuD,MAAOC,qBACpBC,UAASP,EAAEG,OAAO,GAAGC,MACrBrD,MAAO,CAACiD,EAAEG,OAAO,GAAGC,MAAMI,MAAM,KAAKC,UAAUC,KAAK,MACpD1D,SAAU,SAIda,EAAY+B,QAAQ1B,IACdA,EAAGxB,KAAOS,IACZe,EAAGtB,KAAO0B,SAASqC,eAAe,SAASP,MAC3ClC,EAAGrB,SAAWyB,SAASqC,eAAe,YAAYP,MAClDlC,EAAGqC,QAAUjC,SAASqC,eAAe,WAAWP,MAChDlC,EAAGnB,MAAMoB,KAAKG,SAASqC,eAAe,SAASP,MAAMI,MAAM,KAAKC,UAAUC,KAAK,SAG7EE,MAAAA,EAAiBzB,EAActB,GACrCO,EAAKC,QAAQwB,UAAY,GACzBzB,EAAKC,QAAQ0B,mBAAmB,YAAaa,GAC7CxC,EAAKM,MAAMmC,UAAUC,OAAO,UAE5B1B,EAAiBvB,EAAaC,GAGhC,SAASqB,EAAc4B,GACjBC,IAAAA,EAAW,GAKRD,OAHQzC,SAASqC,eAAe,UAChCE,UAAUC,OAAO,YAEjBC,EACJ9C,IAAIC,IACKA,OAAAA,EAAGrB,UACJ,IAAA,OACHmE,EAAWC,EAAX,QACA,MACG,IAAA,iBACHD,EAAWE,EAAX,QACA,MACG,IAAA,OACHF,EAAWG,EAAX,QACA,MACG,IAAA,QACHH,EAAWI,EAAX,QACA,MACF,QACEJ,EAAWC,EAAX,QAGI,iBAAU/C,EAAGxB,yDACQsE,2DAC3B9C,EAAGtB,oBACHsB,EAAGpB,uBACHoB,EAAGrB,wBACHqB,EAAGqC,uBACHrC,EAAGnB,gCACQsE,EAAO,0EACPC,EAAQ,2EACRC,EAAI,6DAGlBb,KAAK,IAGV,SAAS5B,IACP3B,EAAa,GACbiB,EAAKM,MAAMmC,UAAUW,IAAI,UAG3B,SAASzC,EAAYiB,GACf,GAACA,EAAEG,OAAOsB,IAINzB,OAAAA,EAAEG,OAAOsB,KACV,IAAA,SACHC,EAAW1B,GACX,MACG,IAAA,UACH2B,EAAc3B,EAAEG,OAAOyB,cAAcA,eACrC,MACG,IAAA,MACHC,EAAa7B,EAAEG,OAAOyB,cAAcA,gBAQ1C,SAASF,EAAW1B,GAClB7C,EAAa6C,EAAEG,OAAOyB,cAAcA,cAAclF,GAAGoF,WAErDxD,SAASqC,eAAe,SAASP,MAC/BJ,EAAEG,OAAOyB,cAAcA,cAAcG,SAAS,GAAGC,YACnD1D,SAASqC,eAAe,WAAWP,MACjCJ,EAAEG,OAAOyB,cAAcA,cAAcG,SAAS,GAAGC,YACnD5D,EAAKM,MAAMmC,UAAUW,IAAI,UAG3B,SAASG,EAAc3B,GACrB5C,EAAe,GACfC,EAAkB,GAClBC,EAAkB,GAClBC,EAAqB,GACrBC,EAAe,GACfC,EAAkB,GAClBC,EAAgB,GAChBC,EAAmB,GAEC,WAAhBqC,EAAEiC,WACJpE,EAAY+B,QAAQ,CAAC1B,EAAIuB,KACnBvB,GAAAA,EAAGxB,KAAOsD,EAAEtD,IACM,SAAhBwB,EAAGlB,SAAqB,CAC1BkB,EAAGlB,SAAW,QACdc,EAAcK,KAAKD,GACnBL,EAAYqE,OAAOzC,EAAO,GAE1BrB,EAAKC,QAAQwB,UAAY,GACnBX,MAAAA,EAAcC,EAActB,GAClCO,EAAKC,QAAQ0B,mBAAmB,YAAab,MAMjC,aAAhBc,EAAEiC,WACJnE,EAAc8B,QAAQ,CAAC1B,EAAIuB,KACrBvB,GAAAA,EAAGxB,KAAOsD,EAAEtD,IACM,UAAhBwB,EAAGlB,SAAsB,CAC3BkB,EAAGlB,SAAW,OACda,EAAYM,KAAKD,GACjBJ,EAAcoE,OAAOzC,EAAO,GAE5BrB,EAAKC,QAAQwB,UAAY,GACnBX,MAAAA,EAAciD,EAAsBrE,GAC1CM,EAAKC,QAAQ0B,mBAAmB,YAAab,MAKrDE,EAAiBvB,EAAaC,GAGhC,SAAS+D,GAAa,GAAEnF,IACtBU,EAAe,GACfC,EAAkB,GAClBC,EAAkB,GAClBC,EAAqB,GACrBC,EAAe,GACfC,EAAkB,GAClBC,EAAgB,GAChBC,EAAmB,GAEb8B,MAAAA,EAAQ5B,EAAYuE,UAAUlE,GAAMA,EAAGxB,KAAOA,IACrC,IAAX+C,GACF5B,EAAYqE,OAAOzC,EAAO,GAEtB4C,MAAAA,EAAWlD,EAActB,GAC/BO,EAAKC,QAAQwB,UAAY,GACzBzB,EAAKC,QAAQ0B,mBAAmB,YAAasC,GAE7CjD,EAAiBvB,EAAaC,GAGhC,SAASmB,EAAQe,GACXA,EAAEG,SAAW/B,EAAKM,OACpB4D,EAAatC,GAGXA,EAAEG,SAAW7B,SAASqC,eAAe,eAChC,SAAP/C,EAAgB2E,EAAgBvC,GAAKwC,EAAe3E,IAGxD,SAASyE,EAAatC,GACpB5B,EAAKM,MAAMmC,UAAUC,OAAO,UAG9B,SAASyB,EAAgBvC,GACvBpC,EAAK,QACUU,SAASqC,eAAe,UAChCE,UAAUW,IAAI,YAErBpD,EAAKC,QAAQwB,UAAY,GACnBX,MAAAA,EAAciD,EAAsBrE,GAC1CM,EAAKC,QAAQ0B,mBAAmB,YAAab,GAG/C,SAASsD,EAAexC,GACtBpC,EAAK,OACLQ,EAAKC,QAAQwB,UAAY,GACnBX,MAAAA,EAAcC,EAActB,GAClCO,EAAKC,QAAQ0B,mBAAmB,YAAab,GAG/C,SAASiD,EAAsBpB,GACzBC,IAAAA,EAAW,GACRD,OAAAA,EACJ9C,IAAIC,IACKA,OAAAA,EAAGrB,UACJ,IAAA,OACHmE,EAAWC,EAAX,QACA,MACG,IAAA,iBACHD,EAAWE,EAAX,QACA,MACG,IAAA,OACHF,EAAWG,EAAX,QACA,MACG,IAAA,QACHH,EAAWI,EAAX,QACA,MACF,QACEJ,EAAWC,EAAX,QAGI,iBAAU/C,EAAGxB,2DACQsE,2DAC3B9C,EAAGtB,oBACHsB,EAAGpB,uBACHoB,EAAGrB,wBACHqB,EAAGqC,uBACHrC,EAAGnB,gCACQsE,EAAO,0EACPC,EAAQ,mFACRC,EAAI,6DAGlBb,KAAK,IAGV,SAASZ,EAAsBiB,GACzBC,IAAAA,EAAW,GACXyB,EAAW,GACXC,EAAa,GAEV3B,OAAAA,EACJ9C,IAAIC,IACKA,OAAAA,GACD,IAAA,OACH8C,EAAWC,EAAX,QACAwB,EAAWrF,EAAauF,OACxBD,EAAarF,EAAgBsF,OAC7B,MACG,IAAA,iBACH3B,EAAWE,EAAX,QACAuB,EAAWnF,EAAgBqF,OAC3BD,EAAanF,EAAmBoF,OAChC,MACG,IAAA,OACH3B,EAAWG,EAAX,QACAsB,EAAWjF,EAAamF,OACxBD,EAAajF,EAAgBkF,OAC7B,MACG,IAAA,QACH3B,EAAWI,EAAX,QACAqB,EAAW/E,EAAciF,OACzBD,EAAa/E,EAAiBgF,OAC9B,MACF,QACE3B,EAAWC,EAAX,QAGI,iBAAU/C,EAAGxB,2DACQsE,2DAC3B9C,iBACAuE,iBACAC,0BAKHhC,KAAK,IAtVVtC,EAAKC,QAAQ0B,mBAAmB,YAAab,GAE7CE,EAAiBvB,EAAaC","file":"src.3fb91334.js","sourceRoot":"..\\src","sourcesContent":["module.exports=[{id:\"1\",icon:\"/images/cart.png\",name:\"Shopping list\",category:\"Task\",created:\"January 03, 2022\",\"—Åontent\":\"Tomatoes, bread\",dates:[],isActive:\"true\"},{id:\"2\",icon:\"/cart.6b493076.png\",name:\"The theory of evolution\",category:\"Random Thought\",created:\"January 03, 2022\",\"—Åontent\":\"The evolution...\",dates:[\"4/01/2022, 10/01/2022\"],isActive:\"true\"},{id:\"3\",icon:\"./images/cart.png\",name:\"New Feature\",category:\"Idea\",created:\"January 03, 2022\",\"—Åontent\":\"Implement new\",dates:[],isActive:\"true\"},{id:\"4\",icon:\"./images/cart.png\",name:\"William Gaddis\",category:\"Quote\",created:\"January 03, 2022\",\"—Åontent\":\"Power doesn't co...\",dates:[],isActive:\"true\"},{id:\"5\",icon:\"./images/cart.png\",name:\"William Gaddis\",category:\"Quote\",created:\"January 03, 2022\",\"—Åontent\":\"Power doesn't co...\",dates:[],isActive:\"false\"},{id:\"6\",icon:\"./images/cart.png\",name:\"William Gaddis\",category:\"Quote\",created:\"January 03, 2022\",\"—Åontent\":\"Power doesn't co...\",dates:[],isActive:\"false\"}];","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can‚Äôt use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nmodule.exports = require('./lib/index');\n","import './sass/main.scss';\r\nimport cart from './images/cart.png';\r\nimport head from './images/head.png';\r\nimport lamp from './images/lamp.png';\r\nimport quotes from './images/quotes.png';\r\nimport pencil from './images/pencil.png';\r\nimport archive from './images/archive.png';\r\nimport bin from './images/bin.png';\r\n\r\nimport notes from './notes.json';\r\nconst shortid = require('shortid');\r\n\r\nlet editNoteId;\r\nlet taskActiveEl = [];\r\nlet taskArchiivedEl = [];\r\nlet randomeActiveEl = [];\r\nlet randomeArchiivedEl = [];\r\nlet ideaActiveEl = [];\r\nlet ideaArchiivedEl = [];\r\nlet quoteActiveEl = [];\r\nlet quoteArchiivedEl = [];\r\nlet on = 'true';\r\n\r\nconst activeNotes = [];\r\nconst archivedNotes = [];\r\n\r\nsortNotesByStatus(notes);\r\n\r\nfunction sortNotesByStatus(notes) {\r\n  notes.map(el => {\r\n    if (el.isActive === 'true') {\r\n      activeNotes.push(el);\r\n    } else {\r\n      archivedNotes.push(el);\r\n    }\r\n  });\r\n}\r\n\r\nconst refs = {\r\n  tbodyEl: document.querySelector('tbody'),\r\n  form: document.querySelector('form'),\r\n  createBtn: document.querySelector('.createBtn'),\r\n  modal: document.querySelector('.backdrop'),\r\n  categoryEl: document.querySelector('.categoryEl'),\r\n};\r\n\r\nrefs.form.addEventListener('submit', onFormSubmit);\r\nrefs.createBtn.addEventListener('click', onCreateClick);\r\nrefs.tbodyEl.addEventListener('click', onFormClick);\r\nwindow.addEventListener('click', onClick);\r\n\r\nconst notesMarkup = notesMarkupEl(activeNotes);\r\nrefs.tbodyEl.insertAdjacentHTML('beforeend', notesMarkup);\r\n\r\nsortByCategories(activeNotes, archivedNotes);\r\nfunction sortByCategories(activeNotes, archivedNotes) {\r\n  const notesArr = [...activeNotes, ...archivedNotes];\r\n  const uniq = notesArr\r\n    .map(el => el.category)\r\n    .filter((item, index, arr) => {\r\n      return arr.indexOf(item) === index;\r\n    });\r\n\r\n  activeNotes.forEach(el => {\r\n    switch (el.category) {\r\n      case 'Task':\r\n        taskActiveEl.push(el);\r\n        break;\r\n      case 'Random Thought':\r\n        randomeActiveEl.push(el);\r\n        break;\r\n      case 'Idea':\r\n        ideaActiveEl.push(el);\r\n        break;\r\n      case 'Quote':\r\n        quoteActiveEl.push(el);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\n  archivedNotes.forEach(el => {\r\n    switch (el.category) {\r\n      case 'Task':\r\n        taskArchiivedEl.push(el);\r\n        break;\r\n      case 'Random Thought':\r\n        randomeArchiivedEl.push(el);\r\n        break;\r\n      case 'Idea':\r\n        ideaArchiivedEl.push(el);\r\n        break;\r\n      case 'Quote':\r\n        quoteArchiivedEl.push(el);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\n  refs.categoryEl.innerHTML = '';\r\n  const notesMarkup = categoryNotesMarkupEl(uniq);\r\n  refs.categoryEl.insertAdjacentHTML('beforeend', notesMarkup);\r\n}\r\n\r\nfunction onFormSubmit(e) {\r\n  e.preventDefault();\r\n\r\n  taskActiveEl = [];\r\n  taskArchiivedEl = [];\r\n  randomeActiveEl = [];\r\n  randomeArchiivedEl = [];\r\n  ideaActiveEl = [];\r\n  ideaArchiivedEl = [];\r\n  quoteActiveEl = [];\r\n  quoteArchiivedEl = [];\r\n\r\n  if (!editNoteId) {\r\n    activeNotes.push({\r\n      id: shortid.generate(),\r\n      name: e.target[0].value,\r\n      category: e.target[1].value,\r\n      created: new Date().toLocaleDateString(),\r\n      —Åontent: e.target[2].value,\r\n      dates: [e.target[3].value.split('-').reverse().join('/')],\r\n      isActive: 'true',\r\n    });\r\n  }\r\n\r\n  activeNotes.forEach(el => {\r\n    if (el.id === editNoteId) {\r\n      el.name = document.getElementById('fname').value;\r\n      el.category = document.getElementById('category').value;\r\n      el.—Åontent = document.getElementById('—Åontent').value;\r\n      el.dates.push(document.getElementById('dates').value.split('-').reverse().join('/'));\r\n    }\r\n  });\r\n  const newNotesMarkup = notesMarkupEl(activeNotes);\r\n  refs.tbodyEl.innerHTML = '';\r\n  refs.tbodyEl.insertAdjacentHTML('beforeend', newNotesMarkup);\r\n  refs.modal.classList.remove('isOpen');\r\n\r\n  sortByCategories(activeNotes, archivedNotes);\r\n}\r\n\r\nfunction notesMarkupEl(data) {\r\n  let noteName = '';\r\n\r\n  const btnSub = document.getElementById('sbtBtn');\r\n  btnSub.classList.remove('isHidden');\r\n\r\n  return data\r\n    .map(el => {\r\n      switch (el.category) {\r\n        case 'Task':\r\n          noteName = cart;\r\n          break;\r\n        case 'Random Thought':\r\n          noteName = head;\r\n          break;\r\n        case 'Idea':\r\n          noteName = lamp;\r\n          break;\r\n        case 'Quote':\r\n          noteName = quotes;\r\n          break;\r\n        default:\r\n          noteName = cart;\r\n          break;\r\n      }\r\n      return `<tr id=\"${el.id}\" class='active'>\r\n  <td><img class=\"noteIcon\" src='${noteName}' alt='noteName' width='30' height='30' /></td>\r\n  <td>${el.name}</td>\r\n  <td>${el.created}</td>\r\n  <td>${el.category}</td>\r\n  <td>${el.—Åontent}</td>\r\n  <td>${el.dates}</td>\r\n  <td><img  src='${pencil}' alt='pencil' width='30' height='30' /></td>\r\n  <td><img  src='${archive}' alt='archive' width='30' height='30' /></td>\r\n  <td><img  src=\"${bin}\" alt='bin' width='30' height='30' /></td>\r\n</tr>`;\r\n    })\r\n    .join('');\r\n}\r\n\r\nfunction onCreateClick() {\r\n  editNoteId = '';\r\n  refs.modal.classList.add('isOpen');\r\n}\r\n\r\nfunction onFormClick(e) {\r\n  if (!e.target.alt) {\r\n    return;\r\n  }\r\n\r\n  switch (e.target.alt) {\r\n    case 'pencil':\r\n      onEditNote(e);\r\n      break;\r\n    case 'archive':\r\n      onArchiveNote(e.target.parentElement.parentElement);\r\n      break;\r\n    case 'bin':\r\n      onRemoveNote(e.target.parentElement.parentElement);\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nfunction onEditNote(e) {\r\n  editNoteId = e.target.parentElement.parentElement.id.toString();\r\n\r\n  document.getElementById('fname').value =\r\n    e.target.parentElement.parentElement.children[1].textContent;\r\n  document.getElementById('—Åontent').value =\r\n    e.target.parentElement.parentElement.children[4].textContent;\r\n  refs.modal.classList.add('isOpen');\r\n}\r\n\r\nfunction onArchiveNote(e) {\r\n  taskActiveEl = [];\r\n  taskArchiivedEl = [];\r\n  randomeActiveEl = [];\r\n  randomeArchiivedEl = [];\r\n  ideaActiveEl = [];\r\n  ideaArchiivedEl = [];\r\n  quoteActiveEl = [];\r\n  quoteArchiivedEl = [];\r\n\r\n  if (e.className === 'active') {\r\n    activeNotes.forEach((el, index) => {\r\n      if (el.id === e.id) {\r\n        if (el.isActive === 'true') {\r\n          el.isActive = 'false';\r\n          archivedNotes.push(el);\r\n          activeNotes.splice(index, 1);\r\n\r\n          refs.tbodyEl.innerHTML = '';\r\n          const notesMarkup = notesMarkupEl(activeNotes);\r\n          refs.tbodyEl.insertAdjacentHTML('beforeend', notesMarkup);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  if (e.className === 'archived') {\r\n    archivedNotes.forEach((el, index) => {\r\n      if (el.id === e.id) {\r\n        if (el.isActive === 'false') {\r\n          el.isActive = 'true';\r\n          activeNotes.push(el);\r\n          archivedNotes.splice(index, 1);\r\n\r\n          refs.tbodyEl.innerHTML = '';\r\n          const notesMarkup = archivedNotesMarkupEl(archivedNotes);\r\n          refs.tbodyEl.insertAdjacentHTML('beforeend', notesMarkup);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  sortByCategories(activeNotes, archivedNotes);\r\n}\r\n\r\nfunction onRemoveNote({ id }) {\r\n  taskActiveEl = [];\r\n  taskArchiivedEl = [];\r\n  randomeActiveEl = [];\r\n  randomeArchiivedEl = [];\r\n  ideaActiveEl = [];\r\n  ideaArchiivedEl = [];\r\n  quoteActiveEl = [];\r\n  quoteArchiivedEl = [];\r\n\r\n  const index = activeNotes.findIndex(el => el.id === id);\r\n  if (index !== -1) {\r\n    activeNotes.splice(index, 1);\r\n  }\r\n  const delNotes = notesMarkupEl(activeNotes);\r\n  refs.tbodyEl.innerHTML = '';\r\n  refs.tbodyEl.insertAdjacentHTML('beforeend', delNotes);\r\n\r\n  sortByCategories(activeNotes, archivedNotes);\r\n}\r\n\r\nfunction onClick(e) {\r\n  if (e.target === refs.modal) {\r\n    onCloseModal(e);\r\n  }\r\n\r\n  if (e.target === document.getElementById('archiveId')) {\r\n    on === 'true' ? onArchiveRender(e) : onActiveRender(activeNotes);\r\n  }\r\n}\r\nfunction onCloseModal(e) {\r\n  refs.modal.classList.remove('isOpen');\r\n}\r\n\r\nfunction onArchiveRender(e) {\r\n  on = 'false';\r\n  const btnSub = document.getElementById('sbtBtn');\r\n  btnSub.classList.add('isHidden');\r\n\r\n  refs.tbodyEl.innerHTML = '';\r\n  const notesMarkup = archivedNotesMarkupEl(archivedNotes);\r\n  refs.tbodyEl.insertAdjacentHTML('beforeend', notesMarkup);\r\n}\r\n\r\nfunction onActiveRender(e) {\r\n  on = 'true';\r\n  refs.tbodyEl.innerHTML = '';\r\n  const notesMarkup = notesMarkupEl(activeNotes);\r\n  refs.tbodyEl.insertAdjacentHTML('beforeend', notesMarkup);\r\n}\r\n\r\nfunction archivedNotesMarkupEl(data) {\r\n  let noteName = '';\r\n  return data\r\n    .map(el => {\r\n      switch (el.category) {\r\n        case 'Task':\r\n          noteName = cart;\r\n          break;\r\n        case 'Random Thought':\r\n          noteName = head;\r\n          break;\r\n        case 'Idea':\r\n          noteName = lamp;\r\n          break;\r\n        case 'Quote':\r\n          noteName = quotes;\r\n          break;\r\n        default:\r\n          noteName = cart;\r\n          break;\r\n      }\r\n      return `<tr id=\"${el.id}\" class='archived'>\r\n  <td><img class=\"noteIcon\" src='${noteName}' alt='noteName' width='30' height='30' /></td>\r\n  <td>${el.name}</td>\r\n  <td>${el.created}</td>\r\n  <td>${el.category}</td>\r\n  <td>${el.—Åontent}</td>\r\n  <td>${el.dates}</td>\r\n  <td><img  src='${pencil}' alt='pencil' width='30' height='30' /></td>\r\n  <td><img  src='${archive}' alt='archive' width='30' height='30' />Archived</td>\r\n  <td><img  src=\"${bin}\" alt='bin' width='30' height='30' /></td>\r\n</tr>`;\r\n    })\r\n    .join('');\r\n}\r\n\r\nfunction categoryNotesMarkupEl(data) {\r\n  let noteName = '';\r\n  let activeEl = '';\r\n  let archivedEl = '';\r\n\r\n  return data\r\n    .map(el => {\r\n      switch (el) {\r\n        case 'Task':\r\n          noteName = cart;\r\n          activeEl = taskActiveEl.length;\r\n          archivedEl = taskArchiivedEl.length;\r\n          break;\r\n        case 'Random Thought':\r\n          noteName = head;\r\n          activeEl = randomeActiveEl.length;\r\n          archivedEl = randomeArchiivedEl.length;\r\n          break;\r\n        case 'Idea':\r\n          noteName = lamp;\r\n          activeEl = ideaActiveEl.length;\r\n          archivedEl = ideaArchiivedEl.length;\r\n          break;\r\n        case 'Quote':\r\n          noteName = quotes;\r\n          activeEl = quoteActiveEl.length;\r\n          archivedEl = quoteArchiivedEl.length;\r\n          break;\r\n        default:\r\n          noteName = cart;\r\n          break;\r\n      }\r\n      return `<tr id=\"${el.id}\" class='archived'>\r\n  <td><img class=\"noteIcon\" src='${noteName}' alt='noteName' width='30' height='30' /></td>\r\n  <td>${el}</td>\r\n  <td>${activeEl}</td>\r\n  <td>${archivedEl}</td>\r\n  \r\n  \r\n</tr>`;\r\n    })\r\n    .join('');\r\n}\r\n"]}